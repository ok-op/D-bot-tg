name: Extract Docker Image

on:
  workflow_dispatch:

jobs:
  extract:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read Docker Image URL from text file
        id: get_image_url
        run: |
          IMAGE_URL=$(cat image_url.txt)
          echo "Using Docker image URL: $IMAGE_URL"
          echo "IMAGE_URL=$IMAGE_URL" >> $GITHUB_ENV

      - name: Pull Docker image
        run: docker pull ${{ env.IMAGE_URL }}

      - name: Create and export container
        run: |
          docker create --name tempcontainer ${{ env.IMAGE_URL }}
          docker export tempcontainer > stream.tar
          docker rm tempcontainer

      - name: Split the Docker image if needed
        run: |
          # Split the stream.tar file into 500MB parts if it's larger than 500MB
          FILE_SIZE=$(stat --format="%s" stream.tar)
          if [ $FILE_SIZE -gt 524288000 ]; then
            echo "Splitting the file into 500MB chunks..."
            split -b 500M stream.tar part_
          fi

      - name: Upload to Telegram
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
        run: |
          # If the file is split, upload each part separately
          for part in part_*; do
            curl -F "document=@$part" -F "chat_id=$CHAT_ID" -F "caption=Extracted Docker Image" "https://api.telegram.org/bot${BOT_TOKEN}/sendDocument"
          done
          # If the file is not split, upload the single file
          if [ ! -f part_aa ]; then
            curl -F "document=@stream.tar" -F "chat_id=$CHAT_ID" -F "caption=Extracted Docker Image" "https://api.telegram.org/bot${BOT_TOKEN}/sendDocument"
          fi
