name: Extract Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  extract:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read Docker Image URL from text file
        id: get_image_url
        run: |
          IMAGE_URL=$(cat image_url.txt)
          echo "Using Docker image URL: $IMAGE_URL"
          echo "IMAGE_URL=$IMAGE_URL" >> $GITHUB_ENV

      - name: Pull Docker image
        run: docker pull ${{ env.IMAGE_URL }}

      - name: Create and export container
        run: |
          docker create --name tempcontainer ${{ env.IMAGE_URL }}
          docker export tempcontainer > stream.tar
          docker rm tempcontainer

      - name: Split the Docker image if needed
        run: |
          FILE_SIZE=$(stat --format="%s" stream.tar)
          if [ $FILE_SIZE -gt 524288000 ]; then
            echo "Splitting the file into 500MB chunks..."
            split -b 500M stream.tar part_
          else
            echo "File is less than 500MB, no split required."
          fi
          ls -lh

      - name: Print file size
        run: |
          FILE_SIZE=$(stat --format="%s" stream.tar)
          echo "File size: $FILE_SIZE bytes"

      - name: Upload logs
        run: |
          echo "Uploading the file..." > upload_log.txt
          curl -F "document=@stream.tar" -F "chat_id=$CHAT_ID" -F "caption=Extracted Docker Image" \
          "https://api.telegram.org/bot${BOT_TOKEN}/sendDocument" >> upload_log.txt
          echo "Upload completed." >> upload_log.txt

      - name: Upload with retry logic
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
        run: |
          for i in {1..3}; do
            if curl -F "document=@stream.tar" -F "chat_id=$CHAT_ID" \
              -F "caption=Extracted Docker Image" \
              "https://api.telegram.org/bot${BOT_TOKEN}/sendDocument"; then
              echo "Upload successful."
              break
            else
              echo "Upload failed. Attempt $i"
              sleep 5
            fi
          done

      - name: Upload to Telegram
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
        run: |
          if [ -f part_aa ]; then
            echo "Uploading split parts"
            for part in part_*; do
              echo "Uploading part: $part"
              curl -F "document=@$part" -F "chat_id=$CHAT_ID" \
              -F "caption=Extracted Docker Image ($part)" \
              "https://api.telegram.org/bot${BOT_TOKEN}/sendDocument"
            done
          else
            echo "Uploading the whole stream.tar"
            curl -F "document=@stream.tar" -F "chat_id=$CHAT_ID" \
            -F "caption=Extracted Docker Image" \
            "https://api.telegram.org/bot${BOT_TOKEN}/sendDocument"
          fi
